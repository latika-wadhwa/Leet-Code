Question:
The Employee table holds all employees. Every employee has an Id, a salary, and there is also a column for the department Id.

+----+-------+--------+--------------+
| Id | Name  | Salary | DepartmentId |
+----+-------+--------+--------------+
| 1  | Joe   | 70000  | 1            |
| 2  | Jim   | 90000  | 1            |
| 3  | Henry | 80000  | 2            |
| 4  | Sam   | 60000  | 2            |
| 5  | Max   | 90000  | 1            |
+----+-------+--------+--------------+
The Department table holds all departments of the company.

+----+----------+
| Id | Name     |
+----+----------+
| 1  | IT       |
| 2  | Sales    |
+----+----------+
Write a SQL query to find employees who have the highest salary in each of the departments. For the above tables, your SQL query should return the following rows (order of rows does not matter).

+------------+----------+--------+
| Department | Employee | Salary |
+------------+----------+--------+
| IT         | Max      | 90000  |
| IT         | Jim      | 90000  |
| Sales      | Henry    | 80000  |
+------------+----------+--------+
Explanation:

Max and Jim both have the highest salary in the IT department and Henry has the highest salary in the Sales department.

Solution:
/* Write your T-SQL query statement below */

SELECT 
    d.Name AS Department 
    , ab.name AS Employee  
    , ab.Salary 
FROM 
    (SELECT  
        id
        , name
        , departmentid
        , Salary
        , Rank() over(partition by DepartmentId Order by salary desc) AS RowRank 
    FROM 
        Employee ) ab 
JOIN 
    Department D 
ON 
    ab.departmentid = d.id
   
WHERE 
    ab.RowRank = 1 
ORDER BY 
    ab.departmentId asc 
    
    
Submission Details:
Runtime: 931 ms, faster than 69.81% of MS SQL Server online submissions for Department Highest Salary.
Memory Usage: 0B, less than 100.00% of MS SQL Server online submissions for Department Highest Salary.
15 / 15 test cases passed.
Status: Accepted
Runtime: 931 ms
Memory Usage: 0B
Submitted: 0 minutes ago
